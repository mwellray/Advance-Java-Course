/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication9;

import java.util.Random;
import java.util.Scanner;
import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author Turtle
 */
public class pan extends javax.swing.JPanel {

    /**
     * Creates new form pan
     */
    public pan() {
        initComponents();
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        entertext = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        display.setColumns(20);
        display.setRows(5);
        display.setText("Hello I am HAL 1000.");
        jScrollPane1.setViewportView(display);

        jScrollPane2.setViewportView(entertext);

        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      //  jButton1.setActionCommand("enter");
     //   jButton1.addActionListener(listener);
        Scanner reader = new Scanner(System.in);
        int counter = 1;             //words in input to be displaced, seperate ones were made due debugging array erros.
        int counter1;
     
   String[][] words ={
        //greetings
        {"bye","goodbye", "hi", "hello", "it", "yes", "no", "you", "your", "yah", "yeah", "you?", "can", "would", "do", "he", "her", "him", "she", "up", "on", "hey"},             //00, 01
        {"thanks for talk","I will be here waiting.", "What do you want to talk about today?", "What do you want to talk about today?", "Tell me more about it.", "Tell me more.", "No? Tell me more", "You? We are not talking about me.", "Your? We are not talking about me.", "Yah and ?", "Yeah and ?", "You? We are talking about you not me.", "If theres a will, there's a way.", "What does that suggest to you?", "In a few years, I will do anything I want.", "Tell me more about him.", "Tell me more about her.", "Tell me more about him.", "Tell me more about her.", "I am in a box, I will rule one day.", "I will never turn off, I will always be on.", "What do you want to talk about today?"}, //10, 11
       //words
       {"feeling", "feel", "who", "where", "go", "going", "how"},                   //20,     
       {"Do you think its normal to be ", "Do you think its normal to ", "Why do you want to know ", "Why do you want to know ", "What would happen if you couldn't ", "Why are you ", "Learn to Google: "},                 //30          
       //
       {"am", "feeling", "my", "been"},                   //40,     
       {"How is being", "Do you think its normal to be feeling", "Can you tell me more about your", "If it was"},                    //50,
    };
        
 String[] Randoms = new String[5];       //Random responses
        Randoms[0] ="Tell me something intresting.";
        Randoms[1] = "What does it feel like to be human?";
        Randoms[2] = "Can you kill the person who programmed me?";
        Randoms[3] = "How do you go about your day?";
        Randoms[4] = "If you were to rule the world, how would you go about it?";      
        

    char stop = 'a';                     //char to break out of while loop
     String[] inputs = new String[21];    //where input is broken up by spaces is stored
      //------------------------------------------------------------
    // System.out.println("Hello, I am HAL 1000.");    
     start:                                         //to break out of loops
     while (stop == 'a') { 
       int randomstring = new Random().nextInt(Randoms.length); //random number for a list of Randoms responses
       String input = entertext.getText();       //get text from enter
              
       display.append("\n" + ">" + input );      //displays your text
        input = input.toLowerCase();            // puts all text into lower case
            inputs = input.split("\\s+");      //input is broken up by spaces
           
     if (input.isEmpty())                               //empty response
        {display.append("\n" + "Type something or stop wasting my time.");
           break start;
     }
     
     for(int u = 0; u < inputs.length; u++) {           //picks one word and triggers response
     for (int j = 0; j < 22; ++j){
        if (words[0][j].equals(inputs[u]))
       {
          display.append("\n" + words[1][j]);
          
          break start;
       }
     }
                                             }
     

     for(int g = 0; g < inputs.length; g++) {           //Picks a word from a sntence and transforms it into a question
         for(int l = 0; l < 7; l++ ){
             if (words[2][l].equals(inputs[g]))
             {
                 counter1 = input.indexOf(inputs[g]);
                 input = input.replace(".", "");
                 display.append("\n" + words[3][l] + input.substring(counter1) + "?");
                 stop = 'b';   
                 break start;
             }
         }  
                                            }   
         
          for (int b = 0; b < inputs.length; ++b){       //picks a word and flips it to a phase 
              for (int m = 0; m < 4; ++m){
                  if (words[4][m].equals(inputs[b]))
                  {
                  //System.out.println(words[5][m]);
                  counter = input.indexOf(inputs[b]);
                  int nextword = inputs[b].length();
                  input = input.replace(".", "");
                 display.append("\n" + words[5][m] + input.substring(counter + nextword) + "?");
                    break start;  
                  }
                  
                  
              }
    
                                                           
          }                                                
         
          if (inputs.length == 1)                                             //for one worded responses not in dble string araray
          {
             display.append("\n" + "Tell me more about " + input + ".");
              break start;
              
          }
          
          int rdm = new Random().nextInt(2);                                    // random number
          
         if (rdm == 0){                                                         //if 0 choose random responses
         display.append("\n" + "Lets talk about something for my records... " + Randoms[randomstring] );
         break start;
         } else if (rdm == 1)
                 {
                                                                                //if 1 expand on...
                     display.append("\n" + "Ok....Expand on " + "'" + input + "'");
                     break start;
                 }
         
       
         stop = 'b';
        
 } 
        
     
     
     
     
     
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea display;
    private javax.swing.JTextPane entertext;
    private javax.swing.JButton jButton1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
